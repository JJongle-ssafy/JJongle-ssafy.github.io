---
openapi: 3.0.1
servers:
- url: "/"
paths:
  "/group-game/start":
    post:
      tags:
      - OX 퀴즈
      summary: OX 퀴즈 시작
      description: 랜덤 문제 10개와 sessionKey 반환 및 redis에 저장. Deepsort 온디바이스 이후 삭제
      operationId: startOXGame
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/GameStartResponse"
      security:
      - bearerAuth: []
  "/group-game/finish":
    post:
      tags:
      - OX 퀴즈
      summary: OX 퀴즈 결과 저장
      description: 웹소켓 연결 종료 후 호출. 퀴즈 기록 및 오답노트 저장
      operationId: finishOXGame
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GameFinishRequest"
        required: true
      responses:
        '200':
          description: OK
      security:
      - bearerAuth: []
  "/group-game/image/{id}":
    get:
      tags:
      - OX 퀴즈
      operationId: getImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: string
                format: byte
  "/group-game/history/{historyId}":
    get:
      tags:
      - OX 퀴즈
      summary: OX 퀴즈 기록 상세 조회
      description: 상세 조회 시 오답률이 높았던 문제 3개 반환.
      operationId: getWrongAnswerNote
      parameters:
      - name: historyId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/WrongAnswerNoteResponse"
      security:
      - bearerAuth: []
  "/group-game/histories":
    get:
      tags:
      - OX 퀴즈
      summary: OX 퀴즈 기록 조회
      description: 사용자의 OX 퀴즈 기록을 페이지 단위로 한 페이지에 3개씩 조회.
      operationId: getQuizHistories
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/PageQuizHistoryResponse"
      security:
      - bearerAuth: []
components:
  schemas:
    GameStartResponse:
      type: object
      properties:
        quizResponses:
          type: array
          items:
            "$ref": "#/components/schemas/QuizResponse"
        sessionKey:
          type: string
    QuizResponse:
      type: object
      properties:
        quizId:
          type: integer
          format: int64
        question:
          type: string
        answer:
          type: string
        description:
          type: string
    GameFinishRequest:
      type: object
      properties:
        sessionKey:
          type: string
    WrongAnswerNoteResponse:
      type: object
      properties:
        question:
          type: string
        answer:
          type: string
    PageQuizHistoryResponse:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            "$ref": "#/components/schemas/QuizHistoryResponse"
        number:
          type: integer
          format: int32
        sort:
          "$ref": "#/components/schemas/SortObject"
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          "$ref": "#/components/schemas/PageableObject"
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          "$ref": "#/components/schemas/SortObject"
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        paged:
          type: boolean
        unpaged:
          type: boolean
    QuizHistoryResponse:
      type: object
      properties:
        quizHistoryId:
          type: integer
          format: int64
        playedAt:
          type: string
          format: date-time
    SortObject:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
  securitySchemes:
    bearerAuth:
      type: http
      in: header
      scheme: bearer
      bearerFormat: JWT
