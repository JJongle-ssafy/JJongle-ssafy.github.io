openapi: 3.0.1
info:
  title: User Server API
  version: "1.0.0"
servers:
- url: "/"
paths:
  "/user":
    get:
      tags:
      - user-controller
      operationId: getMyInfo
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/UserInfoDto"
      security:
      - bearerAuth: []
    put:
      tags:
      - user-controller
      operationId: updateUserInfo
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserUpdateDto"
        required: true
      responses:
        '200':
          description: OK
      security:
      - bearerAuth: []
    delete:
      tags:
      - user-controller
      operationId: withdraw
      responses:
        '200':
          description: OK
      security:
      - bearerAuth: []
  "/user/logout":
    post:
      tags:
      - user-controller
      operationId: logout
      responses:
        '200':
          description: OK
      security:
      - bearerAuth: []
  "/auth/signup":
    post:
      tags:
      - auth-controller
      operationId: signup
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SignupRequestDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/UserProfileDto"
  "/auth/reissue":
    post:
      tags:
      - auth-controller
      operationId: refresh
      responses:
        '200':
          description: OK
      security:
      - bearerAuth: []
  "/auth/login":
    post:
      tags:
      - auth-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AuthRequestDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/UserProfileDto"
components:
  schemas:
    UserUpdateDto:
      type: object
      properties:
        nickname:
          type: string
        profileImage:
          type: string
          enum:
          - DEFAULT
          - MONGI
          - TOBY
          - LUNA
    SignupRequestDto:
      type: object
      properties:
        firebaseIdToken:
          type: string
        nickname:
          type: string
        profileImage:
          type: string
          enum:
          - DEFAULT
          - MONGI
          - TOBY
          - LUNA
    UserProfileDto:
      type: object
      properties:
        nickname:
          type: string
        profileImage:
          type: string
          enum:
          - DEFAULT
          - MONGI
          - TOBY
          - LUNA
    AuthRequestDto:
      type: object
      properties:
        firebaseIdToken:
          type: string
    UserInfoDto:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        email:
          type: string
        nickname:
          type: string
        profileImage:
          type: string
          enum:
          - DEFAULT
          - MONGI
          - TOBY
          - LUNA
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
